<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.youngkbt.generic.mapper.UserProjectMapper">

    <resultMap id = "baseProjectResultMap" type = "cn.youngkbt.generic.common.model.GenericProject">
        <id column = "id" property = "id" />
        <result column = "project_name" property = "projectName" />
        <result column = "base_url" property = "baseUrl" />
        <result column = "description" property = "description" />
        <result column = "secret_key" property = "secretKey" />
        <result column = "database_name" property = "databaseName" />
        <result column = "create_user" property = "createUser" />
        <result column = "create_time" property = "createTime" />
        <result column = "modify_user" property = "modifyUser" />
        <result column = "modify_time" property = "modifyTime" />
    </resultMap>

    <resultMap id = "baseUserResultMap" type = "cn.youngkbt.generic.common.model.GenericUser">
        <id column = "id" property = "id" />
        <result column = "username" property = "username" />
        <result column = "nickname" property = "nickname" />
        <result column = "password" property = "password" />
        <result column = "email" property = "email" />
        <result column = "gender" property = "gender" />
        <result column = "birthday" property = "birthday" />
        <result column = "phone" property = "phone" />
        <result column = "status" property = "status" />
        <result column = "register_time" property = "registerTime" />
        <result column = "modify_time" property = "modifyTime" />
        <collection property="genericRole" ofType="cn.youngkbt.generic.common.model.GenericRole">
            <result column = "code" property = "code" />
            <result column = "name" property = "name" />
        </collection>
    </resultMap>

    <sql id = "baseProjectColumnList">
        id, project_name, base_url, description, secret_key, database_name, 
		create_user, create_time, modify_user, modify_time
    </sql>

    <sql id = "baseProjectColumnListSuf">
        gp.id, gp.project_name, gp.base_url, gp.description, gp.secret_key, gp.database_name, 
		gp.create_user, gp.create_time, gp.modify_user, gp.modify_time
    </sql>
    
    <sql id = "baseUserColumnListSuf">
         gu.username, gu.nickname, gu.email, gu.gender, gu.birthday, gu.phone, gu.status
    </sql>

    <select id = "queryGenericProjectListOwner" parameterType = "cn.youngkbt.generic.common.model.UserProject" resultMap = "baseProjectResultMap">
        select
            <include refid = "baseProjectColumnListSuf" />
        from generic.project gp, generic.user_project up
        <where>
            gp.id = up.project_id
            <if test = "username != null">
                and username = #{username}
            </if>
            <if test = "enterType != null">
                and enter_type = #{enterType}
            </if>
        </where>
    </select>
    
    <select id = "queryMemberInProject" resultMap = "baseUserResultMap">
        select 
               <include refid = "baseUserColumnListSuf" />, gr.code, gr.name
        from generic.project gp, generic.user_project up, generic.user gu, generic.role gr
        where gp.secret_key = #{secretKey} and gp.id = up.project_id and up.username = gu.username and up.role_id = gr.id
            limit #{currentPage}, #{pageSize}
    </select>
    
    <select id = "queryAllMemberNotInProject" resultMap = "baseUserResultMap">
        select 
            <include refid = "baseUserColumnListSuf" />
        from generic.user gu where not exists
        (select 1 from generic.user_project up, generic.project gp
                  where gu.username = up.username and up.project_id = gp.id and gp.secret_key = #{secretKey})
    </select>

</mapper>